@model TheBakeryShopper.Models.BakeryItem

@{
    ViewData["Title"] = "CreateItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateItem</h2>

<h4>BakeryItem</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("CreateProduct", "ResSetup", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {


            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, new { @class = "control-label" })
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                <span>@Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })</span>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductQty, new { @class = "control-label" })

                @Html.EditorFor(model => model.ProductQty, new { htmlAttributes = new { @class = "form-control" } })
                <span>@Html.ValidationMessageFor(model => model.ProductQty, "", new { @class = "text-danger" })</span>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Price, new { @class = "control-label" })

                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                <span>@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })</span>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Discount, new { @class = "control-label" })

                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                <span>@Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })</span>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductType, new { @class = "control-label" })
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    foreach (string item in Model.ProductTypeNames)
                    {
                        listItems.Add(new SelectListItem
                        {
                            Text = item,
                            Value = item
                        });
                    }
                }

                @Html.DropDownListFor(model => model.ProductType, listItems, "Select", new { htmlAttributes = new { @class = "form-control" } })
                <span>@Html.ValidationMessageFor(model => model.ProductQty, "", new { @class = "text-danger" })</span>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PreparationTime, new { @class = "control-label" })

                @Html.EditorFor(model => model.PreparationTime, new { htmlAttributes = new { @class = "form-control" } })
                <span>@Html.ValidationMessageFor(model => model.PreparationTime, "", new { @class = "text-danger" })</span>

            </div>
            <div class="form-group">
                @Html.Label("Availablity", "Availablity", new { @class = "control-label" })
                @if (!Model.Availability)
                {
                    <span> @Html.CheckBoxFor(model => model.Availability, new { @checked = false })</span>
                }

            </div>
            <div class="form-group">
                @Html.Label("Product Image", "Product Image", new { @class = "control-label" })
                @Html.TextBoxFor(model => model.ImgPath, new { type = "file", name = "file", @class = "form-control", @id = "upld-tb" })

                

            </div>
            <div class="form-group">
                <img src="" alt="Image" id="img-preview" class="img-thumbnail " />
            </div>
            <div class="form-group">
                <input type="submit" value="Add Product" class="btn btn-default" />
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        $(document).ready(function () {
            $("#upld-tb").change(function () {
                var path = $(this).val();
                alert(path);
                readURL(this);
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#img-preview').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }


            /*  $("#upld").change(function(){
                var fname=$(this).val();
                        alert(fname);
                        $("#img-prev").attr("src",fname);
                      });*/
        });
    </script>
}
